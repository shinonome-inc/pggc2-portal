name: pggc2_dev
services:
  db:
    container_name: pggc2_db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data:delegated
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 30s

  cache:
    container_name: pggc2_cache
    image: redis:7.2-alpine
    volumes:
      - cache-data:/data

  web:
    container_name: pggc2_web
    build:
      context: ./app
      dockerfile: ../Dockerfile
    volumes:
      - ./app:/code
      - ../openapi:/code/openapi
    ports:
      - '8080:8080'
    environment:
      - DB_HOST=db
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    command: >
      /bin/sh -c
      'python manage.py runserver 0.0.0.0:8080'
volumes:
  db-data:
    name: pggc-data
    external: true
  cache-data:
    name: pggc-cache
    external: true
